From b80cf1f33bfe80d246ccc7a0720dccfee115e14a Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Wed, 23 Nov 2016 02:26:14 -0500
Subject: [PATCH] Recover from crash exceptions


diff --git a/src/main/java/net/minecraft/server/CrashReport.java b/src/main/java/net/minecraft/server/CrashReport.java
index 95a5507..8ad64db 100644
--- a/src/main/java/net/minecraft/server/CrashReport.java
+++ b/src/main/java/net/minecraft/server/CrashReport.java
@@ -22,6 +22,7 @@ public class CrashReport {
     private final String b;
     private final Throwable c;
     private final CrashReportSystemDetails d = new CrashReportSystemDetails(this, "System Details");
+    public List<CrashReportSystemDetails> extras() { return e; } // SportBukkit - alias
     private final List<CrashReportSystemDetails> e = Lists.newArrayList();
     private File f;
     private boolean g = true;
@@ -126,10 +127,12 @@ public class CrashReport {
         this.d.a("CraftBukkit Information", (CrashReportCallable) new org.bukkit.craftbukkit.CraftCrashReport()); // CraftBukkit
     }
 
+    public String activity() { return a(); } // SportBukkit alias
     public String a() {
         return this.b;
     }
 
+    public Throwable exception() { return b(); } // SportBukkit - alias
     public Throwable b() {
         return this.c;
     }
@@ -255,6 +258,7 @@ public class CrashReport {
         }
     }
 
+    public CrashReportSystemDetails details() { return g(); } // SportBukkit - alias
     public CrashReportSystemDetails g() {
         return this.d;
     }
diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index a7ce45a..8c9c166 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -29,6 +29,7 @@ import org.bukkit.inventory.MainHand;
 // CraftBukkit end
 
 // SportBukkit start
+import org.bukkit.craftbukkit.CraftLogging;
 import org.bukkit.craftbukkit.util.Skins;
 import org.bukkit.event.player.PlayerSkinPartsChangeEvent;
 import org.bukkit.event.player.PlayerKnockbackEvent;
@@ -494,7 +495,11 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             CrashReportSystemDetails crashreportsystemdetails = crashreport.a("Player being ticked");
 
             this.appendEntityCrashDetails(crashreportsystemdetails);
-            throw new ReportedException(crashreport);
+            // SportBukkit start - recover from crash exceptions
+            //throw new ReportedException(crashreport);
+            playerConnection.disconnect("Sorry, you had to be disconnected because of an internal server error");
+            CraftLogging.crashReport(crashreport);
+            // SportBukkit end
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/TileEntity.java b/src/main/java/net/minecraft/server/TileEntity.java
index 9f93b12..8bd3d14 100644
--- a/src/main/java/net/minecraft/server/TileEntity.java
+++ b/src/main/java/net/minecraft/server/TileEntity.java
@@ -144,6 +144,7 @@ public abstract class TileEntity {
         return this.d;
     }
 
+    public void remove() { z(); } // SportBukkit - alias
     public void z() {
         this.d = true;
     }
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 0732836..aafcb5f 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -18,6 +18,7 @@ import com.google.common.collect.Maps;
 import java.util.Map;
 import org.bukkit.Bukkit;
 import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.CraftLogging;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.craftbukkit.CraftWorld;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
@@ -1332,7 +1333,11 @@ public abstract class World implements IBlockAccess {
                     entity.appendEntityCrashDetails(crashreportsystemdetails);
                 }
 
-                throw new ReportedException(crashreport);
+                // SportBukkit start - recover from crash exceptions
+                //throw new ReportedException(crashreport);
+                entity.die();
+                CraftLogging.crashReport(crashreport);
+                // SportBukkit end
             }
 
             if (entity.dead) {
@@ -1388,7 +1393,11 @@ public abstract class World implements IBlockAccess {
                     crashreport1 = CrashReport.a(throwable1, "Ticking entity");
                     crashreportsystemdetails1 = crashreport1.a("Entity being ticked");
                     entity.appendEntityCrashDetails(crashreportsystemdetails1);
-                    throw new ReportedException(crashreport1);
+                    // SportBukkit start - recover from crash exceptions
+                    //throw new ReportedException(crashreport1);
+                    entity.die();
+                    CraftLogging.crashReport(crashreport1);
+                    // SportBukkit end
                 }
             }
 
@@ -1435,7 +1444,11 @@ public abstract class World implements IBlockAccess {
                         crashreport1 = CrashReport.a(throwable2, "Ticking block entity");
                         crashreportsystemdetails1 = crashreport1.a("Block entity being ticked");
                         tileentity.a(crashreportsystemdetails1);
-                        throw new ReportedException(crashreport1);
+                        // SportBukkit start - recover from crash exceptions
+                        //throw new ReportedException(crashreport1);
+                        tileentity.remove(); // flag for removal, code below actually removes it
+                        CraftLogging.crashReport(crashreport1);
+                        // SportBukkit end
                     }
                 }
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftLogging.java b/src/main/java/org/bukkit/craftbukkit/CraftLogging.java
new file mode 100644
index 0000000..792c90f
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/CraftLogging.java
@@ -0,0 +1,24 @@
+package org.bukkit.craftbukkit;
+
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+import net.minecraft.server.CrashReport;
+import net.minecraft.server.CrashReportSystemDetails;
+import org.bukkit.Bukkit;
+
+public class CraftLogging {
+
+    public static void crashReport(CrashReport report) {
+        crashReport(report, Bukkit.getLogger());
+    }
+
+    public static void crashReport(CrashReport report, Logger logger) {
+        final StringBuilder text = new StringBuilder();
+        for(CrashReportSystemDetails extra : report.extras()) {
+            extra.a(text);
+        }
+        report.details().a(text);
+        logger.log(Level.SEVERE, "Exception while " + report.activity() + "\n\n" + text, report.exception());
+    }
+}
-- 
2.10.2.windows.1

